import type { NextApiRequest, NextApiResponse } from "next";
import nodemailer from "nodemailer";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") {
    return res.status(405).json({ message: "–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω" });
  }

  const { name, email, message } = req.body;

  if (!name || !email || !message) {
    return res.status(400).json({ message: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
  }

  try {
    console.log("üì® –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP...");

    const transporter = nodemailer.createTransport({
      host: "smtp.gmail.com",
      port: 465,
      secure: true, // –¥–ª—è Gmail –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ true
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS,
      },
    });

    console.log("‚úÖ SMTP –≥–æ—Ç–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ...");

    const info = await transporter.sendMail({
      from: `"Eco Med Service" <${process.env.SMTP_USER}>`,
      to: process.env.MAIL_TO,
      subject: "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞",
      text: `
        –ò–º—è: ${name}
        Email: ${email}
        –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}
      `,
      html: `
        <h3>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</h3>
        <p><strong>–ò–º—è:</strong> ${name}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ${message}</p>
      `,
    });

    console.log("üìß –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", info.messageId);

    return res.status(200).json({ message: "–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!" });
  } catch (error: any) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:", error);
    return res.status(500).json({
      message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞",
      error: error.message || error.toString(),
    });
  }
}
